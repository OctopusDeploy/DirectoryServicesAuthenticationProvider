name: Build, Test, Package and Push

# Controls when the action will run. 
on: 
  # Triggers the workflow on push or pull request events
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # all
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
          
      - name: Nuke Build üèó
        id: build
        shell: pwsh
        run: ./build.ps1 \
        --OctoVersionBranch ${{ github.head_ref || github.ref }} \
        --OctoVersionPatch ${{ github.run_number }}

      - name: Tag release (when not pre-release) üè∑Ô∏è
        if: ${{ !contains( steps.build.outputs.octoversion_fullsemver, '-' ) }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.build.outputs.octoversion_fullsemver }}",
              sha: context.sha
            })

      - name: Install Octopus CLI üêô
        uses: OctopusDeploy/install-octopus-cli-action@v1.1.7
        with:
          version: latest
      
      - name: Push to Octopus üêô
        uses: OctopusDeploy/push-package-action@v1.1.1
        with:
          server: https://deploy.octopus.app
          space: Integrations
          api_key: ${{ secrets.DEPLOY_API_KEY }}
          packages: |
            ./artifacts/Octopus.Client.Extensibility.Authentication.DirectoryServices.${{ steps.build.outputs.octoversion_fullsemver }}.nupkg
            ./artifacts/Octopus.Server.Extensibility.Authentication.DirectoryServices.${{ steps.build.outputs.octoversion_fullsemver }}.nupkg

      - name: Create Release in Octopus üêô
        uses: OctopusDeploy/create-release-action@v1.1.1
        with:
          server: https://deploy.octopus.app
          space: Integrations
          api_key: ${{ secrets.DEPLOY_API_KEY }}
          project: "DirectoryServicesAuthenticationProvider"
          packages: |
            Octopus.Client.Extensibility.Authentication.DirectoryServices:${{ steps.build.outputs.octoversion_fullsemver }}
            Octopus.Server.Extensibility.Authentication.DirectoryServices:${{ steps.build.outputs.octoversion_fullsemver }}